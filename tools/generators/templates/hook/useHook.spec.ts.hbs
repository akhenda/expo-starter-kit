import { act, renderHook } from '@testing-library/react-native';

import use{{pascalCase name}} from './use{{pascalCase name}}';

describe('use{{pascalCase name}}', () => {
  it('returns initial count', () => {
    const { result } = renderHook(() => useCount());

    expect(result.current.count).toBe(0);
  });

  it('increments the count', () => {
    const { result } = renderHook(() => useCount());

    act(() => {
      result.current.increment();
      result.current.increment();
    });

    expect(result.current.count).toBe(2);
  });

  it('decrements the count', () => {
    const { result } = renderHook(() => useCount());

    act(() => {
      result.current.decrement();
    });

    expect(result.current.count).toBe(-1);
  });

  it('works correcly when both increment and decrement are called several times', () => {
    const { result } = renderHook(() => useCount());

    expect(result.current.count).toBe(0);

    act(() => {
      result.current.increment();
      result.current.increment();
      result.current.increment();
    });

    expect(result.current.count).toBe(3);

    act(() => {
      result.current.decrement();
      result.current.decrement();
      result.current.decrement();
      result.current.decrement();
    });

    expect(result.current.count).toBe(-1);
  });
});
