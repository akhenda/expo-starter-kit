name: CI

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  lint:
    name: Lint
    uses: ./.github/workflows/lint.yml  # use the callable lint job to run linting
  test:
    needs: lint
    runs-on: ubuntu-latest
    name: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PNPM Packager
        uses: pnpm/action-setup@v2.2.4
      - name: Get PNPM Store Directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup PNPM Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Deps
        run: pnpm install --frozen-lockfile
      # - name: Run Tests
      #   run: pnpm run test:ci
      - name: Run Tests and Generate Coverage Annotations
        uses: mattallty/jest-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          test-command: pnpm run test:ci
          # changes-only: true
          # To avoid reporting code coverage, set this variable to false
          coverage-comment: false
      - name: Jest Coverage Comment
        uses: MishaKav/jest-coverage-comment@main
      # - name: Upload Tests Coverage
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: coverage
      #     path: coverage
      - name: Generating coverage badges
        uses: jpb06/jest-badges-action@latest
        if: github.event_name != 'pull_request'
        with:
          branches: main,dev
          commit-message: 'chore: update coverage badges [skip ci]'
          output-folder: ./__badges__

  release:
    needs: test
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PNPM Packager
        uses: pnpm/action-setup@v2.2.4
      - name: Release
        run: echo "Running semantic release..."
      # - name: Semantic Release
      #   uses: cycjimmy/semantic-release-action@v3
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
